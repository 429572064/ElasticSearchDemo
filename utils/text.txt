{'hits': {'hits': [{'_id': 'xCem9GkBA6lwVY9nctUA',
                    '_index': 'sifou',
                    '_score': 8.053757,
                    '_source': {'action_type': '文章',
                                'content': '\n'
                                           '<img>img_node</img>\n'
                                           '文章转自：https://learnku.com/php/t/24930 '
                                           '更多文章：https://learnku.com/laravel/c...\n'
                                           '\n'
                                           '相对于其他几种语言来说， PHP 在 web '
                                           '建站方面有更大的优势，即使是新手，也能很容易搭建一个网站出来。但这种优势也容易带来一些负面影响，因为很多的 '
                                           'PHP 教程没有涉及到安全方面的知识。\n'
                                           '此帖子分为几部分，每部分会涵盖不同的安全威胁和应对策略。但是，这并不是说你做到这几点以后，就一定能避免你的网站出现任何问题。如果你想提高你的网站安全性的话，你应该继续通过阅读书籍或者文章，来研究如何提高你的网站安全性\n'
                                           '出于演示需要，代码可能不是很完美。日常开发过程中，很多代码都包含在了框架跟各种库里面。作为一个后台开发，你不仅要熟练基本的CURD，更要知道如何保护你的数据。\n'
                                           '1.  SQL  注入\n'
                                           '我赌一包辣条，你肯定会看到这里。 SQL '
                                           '注入是对您网站最大的威胁之一，如果您的数据库受到别人的 SQL '
                                           '注入的攻击的话，别人可以转出你的数据库，也许还会产生更严重的后果。\n'
                                           '网站要从数据库中获取动态数据，就必须执行 SQL 语句，举例如下：\n'
                                           '?php\n'
                                           '\n'
                                           "$username = $_GET['username'];\n"
                                           '$query = "SELECT * FROM users '
                                           'WHERE username = \'$username\'";\n'
                                           '\n'
                                           '攻击者控制通过 GET 和 POST 发送的查询（或者例如 UA '
                                           '的一些其他查询）。一般情况下，你希望查询户名为「 peter '
                                           '」的用户产生的 SQL 语句如下：\n'
                                           'SELECT * FROM users WHERE username '
                                           "= 'peter'\n"
                                           "但是，攻击者发送了特定的用户名参数，例如：' OR '1'='1\n"
                                           '这就会导致 SQL 语句变成这样：\n'
                                           'SELECT * FROM users WHERE username '
                                           "= 'peter' OR '1' = '1'\n"
                                           '这样，他就能在不需要密码的情况下导出你的整个用户表的数据了。\n'
                                           '那么，我们如何防止这类事故的发生呢？主流的解决方法有两种。转义用户输入的数据或者使用封装好的语句。转义的方法是封装好一个函数，用来对用户提交的数据进行过滤，去掉有害的标签。但是，我不太推荐使用这个方法，因为比较容易忘记在每个地方都做此处理。\n'
                                           '下面，我来介绍如何使用 PDO 执行封装好的语句（ mysqi '
                                           '也一样）：\n'
                                           "$username = $_GET['username'];\n"
                                           "$query = $pdo-prepare('SELECT * "
                                           'FROM users WHERE username = '
                                           ":username');\n"
                                           "$query-execute(['username' = "
                                           '$username]);\n'
                                           '$data = $query-fetch();\n'
                                           '动态数据的每个部分都以：做前缀。然后将所有参数作为数组传递给执行函数，看起来就像 '
                                           'PDO 为你转义了有害数据一样。\n'
                                           '几乎所有的数据库驱动程序都支持封装好的语句，没有理由不使用它们！养成使用他们的习惯，以后就不会忘记了。\n'
                                           '你也可以参考 phpdelusions 中的一篇关于动态构建 SQL '
                                           '查询时处理安全问题的文章。链接： \xa0'
                                           'https://phpdelusions.net/pdo/... '
                                           '。\n'
                                           '2. XSS\n'
                                           'XSS 又叫 CSS (Cross Site Script) '
                                           '，跨站脚本攻击。它指的是恶意攻击者往 Web 页面里插入恶意 '
                                           'html 代码，当用户浏览该页之时，嵌入其中 Web 里面的 '
                                           'html 代码会被执行，从而达到恶意攻击用户的特殊目的。\n'
                                           '下面以一个搜索页面为例子：\n'
                                           'body\n'
                                           '?php\n'
                                           "$searchQuery = $_GET['q'];\n"
                                           '/* some search magic here */\n'
                                           '?\n'
                                           'h1You searched for: ?php echo '
                                           '$searchQuery; ?/h1\n'
                                           'pWe found: Absolutely nothing '
                                           'because this is a demo/p\n'
                                           '/body\n'
                                           '因为我们把用户的内容直接打印出来，不经过任何过滤，非法用户可以拼接 '
                                           'URL：\n'
                                           'search.php?q=%3Cscript%3Ealert(1)%3B%3C%2Fscript%3E\n'
                                           'PHP 渲染出来的内容如下，可以看到 Javascript '
                                           '代码会被直接执行：\n'
                                           'body\n'
                                           'h1You searched for: '
                                           'scriptalert(1);/script/h1\n'
                                           'pWe found: Absolutely nothing '
                                           'because this is a demo/p\n'
                                           '/body\n'
                                           '问：JS 代码被执行有什么大不了的?\n'
                                           'Javascript 可以:\n'
                                           '\n'
                                           '偷走你用户浏览器里的 Cookie；\n'
                                           '通过浏览器的记住密码功能获取到你的站点登录账号和密码；\n'
                                           '盗取用户的机密信息；\n'
                                           '你的用户在站点上能做到的事情，有了 JS '
                                           '权限执行权限就都能做，也就是说 A 用户可以模拟成为任何用户；\n'
                                           '在你的网页中嵌入恶意代码；\n'
                                           '...\n'
                                           '\n'
                                           '问：如何防范此问题呢?\n'
                                           '好消息是比较先进的浏览器现在已经具备了一些基础的 XSS '
                                           '防范功能，不过请不要依赖与此。\n'
                                           '正确的做法是坚决不要相信用户的任何输入，并过滤掉输入中的所有特殊字符。这样就能消灭绝大部分的 '
                                           'XSS 攻击：\n'
                                           '?php\n'
                                           '\n'
                                           '$searchQuery = '
                                           'htmlentities($searchQuery, '
                                           'ENT_QUOTES);\n'
                                           '或者你可以使用模板引擎\xa0Twig\xa0'
                                           '，一般的模板引擎都会默认为输出加上 htmlentities '
                                           '防范。\n'
                                           '如果你保持了用户的输入内容，在输出时也要特别注意，在以下的例子中，我们允许用户填写自己的博客链接：\n'
                                           'body\n'
                                           '  a href="?php echo $homepageUrl; '
                                           '?"Visit Users homepage/a\n'
                                           '/body\n'
                                           '以上代码可能第一眼看不出来有问题，但是假设用户填入以下内容：\n'
                                           '#" onclick="alert(1)\n'
                                           '会被渲染为：\n'
                                           'body\n'
                                           '  a href="#" '
                                           'onclick="alert(1)"Visit Users '
                                           'homepage/a\n'
                                           '/body\n'
                                           '永远永远不要相信用户输入的数据，或者，永远都假设用户的内容是有攻击性的，态度端正了，然后小心地处理好每一次的用户输入和输出。\n'
                                           '另一个控制 XSS 攻击的方法是提供一个 CSP Meta '
                                           '标签，或者标头信息，更多详情请见：\xa0'
                                           'https://www.html5rocks.com/en...\n'
                                           '另外种 Cookie 时，如果无需 JS 读取的话，请必须设置为 '
                                           '"HTTP ONLY"。这个设置可以令 JavaScript '
                                           '无法读取 PHP 端种的 Cookie。\n'
                                           '3. XSRF/CSRF\n'
                                           'CSRF '
                                           '是跨站请求伪造的缩写，它是攻击者通过一些技术手段欺骗用户去访问曾经认证过的网站并运行一些操作。\n'
                                           '虽然此处展示的例子是 GET 请求，但只是相较于 POST '
                                           '更容易理解，并非防护手段，两者都不是私密的 Cookies '
                                           '或者多步表单。\n'
                                           '假如你有一个允许用户删除账户的页面，如下所示：\n'
                                           '?php\n'
                                           '//delete-account.php\n'
                                           '\n'
                                           "$confirm = $_GET['confirm'];\n"
                                           '\n'
                                           "if($confirm === 'yes') {\n"
                                           '  //goodbye\n'
                                           '}\n'
                                           '攻击者可以在他的站点上构建一个触发这个 URL 的表单（同样适用于 '
                                           'POST 的表单），或者将 URL 加载为图片诱惑用户点击：\n'
                                           'img '
                                           'src="https://example.com/delete-account.php?confirm=yes" '
                                           '/\n'
                                           '用户一旦触发，就会执行删除账户的指令，眨眼你的账户就消失了。\n'
                                           '防御这样的攻击比防御 XSS 与 SQL 注入更复杂一些。\n'
                                           '最常用的防御方法是生成一个 CSRF 令牌加密安全字符串，一般称其为 '
                                           'Token，并将 Token 存储于 Cookie 或者 '
                                           'Session 中。\n'
                                           '每次你在网页构造表单时，将 Token '
                                           '令牌放在表单中的隐藏字段，表单请求服务器以后会根据用户的 '
                                           'Cookie 或者 Session 里的 Token '
                                           '令牌比对，校验成功才给予通过。\n'
                                           '由于攻击者无法知道 Token 令牌的内容（每个表单的 Token '
                                           '令牌都是随机的），因此无法冒充用户。\n'
                                           '?php /* 你嵌入表单的页面 */ ?\n'
                                           '\n'
                                           'form action="/delete-account.php" '
                                           'method="post"\n'
                                           '  input type="hidden" name="csrf" '
                                           'value="?php echo '
                                           '$_SESSION[\'csrf\']; ?"\n'
                                           '  input type="hidden" '
                                           'name="confirm" value="yes" /\n'
                                           '  input type="submit" '
                                           'value="Delete my account" /\n'
                                           '/form\n'
                                           '## \n'
                                           '\n'
                                           '?php\n'
                                           '//delete-account.php\n'
                                           '\n'
                                           "$confirm = $_POST['confirm'];\n"
                                           "$csrf = $_POST['csrf'];\n"
                                           '$knownGoodToken = '
                                           "$_SESSION['csrf'];\n"
                                           '\n'
                                           'if($csrf !== $knownGoodToken) {\n'
                                           "  die('Invalid request');\n"
                                           '}\n'
                                           '\n'
                                           "if($confirm === 'yes') {\n"
                                           '  //goodbye\n'
                                           '}\n'
                                           '请注意，这是个非常简单的示例，你可以加入更多的代码。如果你使用的是像 '
                                           'Symfony 这样的 PHP 框架，那么自带了 CSRF '
                                           '令牌的功能。\n'
                                           '你还可以查看关于 OWASP '
                                           '更详细的问题和更多防御机制的文章：\xa0'
                                           'https://github.com/OWASP/CheatS....\n'
                                           '4. LFI\n'
                                           'LFI （本地文件包含） 是一个用户未经验证从磁盘读取文件的漏洞。\n'
                                           '我经常遇到编程不规范的路由代码示例，它们不验证过滤用户的输入。我们用以下文件为例，将它要渲染的模板文件用 '
                                           'GET 请求加载。\n'
                                           'body\n'
                                           '?php\n'
                                           "  $page = $_GET['page'];\n"
                                           '  if(!$page) {\n'
                                           "    $page = 'main.php';\n"
                                           '  }\n'
                                           '  include($page);\n'
                                           '?\n'
                                           '/body\n'
                                           '由于 Include '
                                           '可以加载任何文件，不仅仅是PHP，攻击者可以将系统上的任何文件作为包含目标传递。\n'
                                           'index.php?page=../../etc/passwd\n'
                                           '这将导致 /etc/passwd 文件被读取并展示在浏览器上。\n'
                                           '要防御此类攻击，你必须仔细考虑允许用户输入的类型，并删除可能有害的字符，如输入字符中的“.” '
                                           '“/” “”。\n'
                                           '如果你真的想使用像这样的路由系统（我不建议以任何方式），你可以自动附加 '
                                           'PHP 扩展，删除任何非 [a-zA-Z0-9-_] '
                                           '的字符，并指定从专用的模板文件夹中加载，以免被包含任何非模板文件。\n'
                                           '我在不同的开发文档中，多次看到造成此类漏洞的 PHP '
                                           '代码。从一开始就要有清晰的设计思路，允许所需要包含的文件类型，并删除掉多余的内容。你还可以构造要读取文件的绝对路径，并验证文件是否存在来作为保护，而不是任何位置都给予读取。\n'
                                           '5. 不充分的密码哈希\n'
                                           '大部分的 Web '
                                           '应用需要保存用户的认证信息。如果密码哈希做的足够好，在你的网站被攻破时，即可保护用户的密码不被非法读取。\n'
                                           '首先，最不应该做的事情，就是把用户密码明文储存起来。大部分的用户会在多个网站上使用同一个密码，这是不可改变的事实。当你的网站被攻破，意味着用户的其他网站的账号也被攻破了。\n'
                                           '其次，你不应该使用简单的哈希算法，事实上所有没有专门为密码哈希优化的算法都不应使用。哈希算法如  '
                                           'MD5 或者 SHA '
                                           '设计初衷就是执行起来非常快。这不是你需要的，密码哈希的终极目标就是让黑客花费无穷尽的时间和精力都无法破解出来密码。\n'
                                           '另外一个比较重要的点是你应该为密码哈希加盐（Salt），加盐处理避免了两个同样的密码会产生同样哈希的问题。\n'
                                           '以下使用 MD5 来做例子，所以请千万不要使用 MD5 '
                                           '来哈希你的密码， MD5 是不安全的。\n'
                                           '假如我们的用户 user1 和 user315 都有相同的密码 '
                                           'ilovecats123，这个密码虽然看起来是强密码，有字母有数字，但是在数据库里，两个用户的密码哈希数据将会是相同的：5e2b4d823db9d044ecd5e084b6d33ea5 '
                                           '。\n'
                                           '如果一个如果黑客拿下了你的网站，获取到了这些哈希数据，他将不需要去暴力破解用户 '
                                           'user315 '
                                           '的密码。我们要尽量让他花大精力来破解你的密码，所以我们对数据进行加盐处理：\n'
                                           '?php\n'
                                           '//warning: '
                                           '!!这是一个很不安全的密码哈希例子，请不要使用!!\n'
                                           '\n'
                                           "$password = 'cat123';\n"
                                           '$salt = random_bytes(20);\n'
                                           '\n'
                                           '$hash = md5($password . $salt);\n'
                                           '最后在保存你的唯一密码哈希数据时，请不要忘记连 $salt '
                                           '也已经保存，否则你将无法验证用户。\n'
                                           '在当下，最好的密码哈希选项是 '
                                           'bcrypt，这是专门为哈希密码而设计的哈希算法，同时这套哈希算法里还允许你配置一些参数来加大破解的难度。\n'
                                           '新版的 PHP 中也自带了安全的密码哈希函数\xa0'
                                           'password_hash\xa0'
                                           '，此函数已经包含了加盐处理。对应的密码验证函数为\xa0'
                                           'password_verify\xa0'
                                           '用来检测密码是否正确。password_verify '
                                           '还可有效防止\xa0时序攻击.\n'
                                           '以下是使用的例子：\n'
                                           '?php\n'
                                           '\n'
                                           '//user signup\n'
                                           "$password = $_POST['password'];\n"
                                           '$hashedPassword = '
                                           'password_hash($password, '
                                           'PASSWORD_DEFAULT);\n'
                                           '\n'
                                           '//login\n'
                                           "$password = $_POST['password'];\n"
                                           "$hash = '1234'; //load this value "
                                           'from your db\n'
                                           '\n'
                                           'if(password_verify($password, '
                                           '$hash)) {\n'
                                           "  echo 'Password is valid!';\n"
                                           '} else {\n'
                                           "  echo 'Invalid password.';\n"
                                           '}\n'
                                           '需要澄清的一点是：密码哈希并不是密码加密。哈希（Hash）是将目标文本转换成具有相同长度的、不可逆的杂凑字符串（或叫做消息摘要），而加密（Encrypt）是将目标文本转换成具有不同长度的、可逆的密文。显然他们之间最大的区别是可逆性，在储存密码时，我们要的就是哈希这种不可逆的属性。\n'
                                           '6. 中间人攻击\n'
                                           'MITM （中间人） '
                                           '攻击不是针对服务器直接攻击，而是针对用户进行，攻击者作为中间人欺骗服务器他是用户，欺骗用户他是服务器，从而来拦截用户与网站的流量，并从中注入恶意内容或者读取私密信息，通常发生在公共 '
                                           'WiFi '
                                           '网络中，也有可能发生在其他流量通过的地方，例如ISP运营商。\n'
                                           '对此的唯一防御是使用 HTTPS，使用 HTTPS '
                                           '可以将你的连接加密，并且无法读取或者篡改流量。你可以从\xa0'
                                           "Let's Encrypt\xa0获取免费的 SSL "
                                           '证书，或从其他供应商处购买，这里不详细介绍如何正确配置 WEB '
                                           '服务器，因为这与应用程序安全性无关，且在很大程度上取决于你的设置。\n'
                                           '你还可以采取一些措施使 HTTPS 更安全，在 WEB '
                                           '服务器配置加上\xa0'
                                           'Strict-Transport-Security\xa0'
                                           '标示头，此头部信息告诉浏览器，你的网站始终通过 HTTPS '
                                           '访问，如果未通过 HTTPS '
                                           '将返回错误报告提示浏览器不应显示该页面。\n'
                                           '然而，这里有个明显的问题，如果浏览器之前从未访问过你的网站，则无法知道你使用此标示头，这时候就需要用到 '
                                           'Hstspreload。\n'
                                           '可以在此注册你的网站:\xa0'
                                           'https://hstspreload.org/\n'
                                           '你在此处提交的所有网站都将被标记为仅 HTTPS，并硬编码到 '
                                           'Google '
                                           'Chrome、FireFox、Opera、Safari、IE11 和 '
                                           'Edge 的源代码中。\n'
                                           '你还可以在 DNS 配置中添加\xa0Certification '
                                           'Authority Authorization (CAA) '
                                           "record\xa0，可以仅允许一个证书颁发机构（例如： Let's "
                                           'encrypt）发布你的域名证书，这进一步提高了用户的安全性。\n'
                                           '7. 命令注入\n'
                                           '这可能是服务器遇到的最严重的攻击，命令注入的目标是欺骗服务器执行任意 '
                                           'Shell 命令\n'
                                           '你如果使用\xa0shell_exec\xa0或是 exec '
                                           '函数。让我们做一个小例子，允许用户简单的从服务器 Ping '
                                           '不同的主机。\n'
                                           '?php\n'
                                           '\n'
                                           "$targetIp = $_GET['ip'];\n"
                                           '$output = shell_exec("ping -c 5 '
                                           '$targetIp");\n'
                                           '输出将包括对目标主机 Ping 5次。除非采用 sh 命令执行 '
                                           'Shell 脚本，否则攻击者可以执行想要的任何操作。\n'
                                           'ping.php?ip=8.8.8.8;ls -l /etc\n'
                                           'Shell 将执行 Ping '
                                           '和由攻击者拼接的第二个命令，这显然是非常危险的。\n'
                                           '感谢 PHP 提供了一个函数来转义 Shell 参数。\n'
                                           'escapeshellarg\xa0'
                                           '转义用户的输入并将其封装成单引号。\n'
                                           '?php\n'
                                           '\n'
                                           '$targetIp = '
                                           "escapeshellarg($_GET['ip']);\n"
                                           '$output = shell_exec("ping -c 5 '
                                           '$targetIp");\n'
                                           '现在你的命令应该是相当安全的，就个人而言，我仍然避免使用 PHP '
                                           '调用外部命令，但这完全取决于你自己的喜好。\n'
                                           '另外，我建议进一步验证用户输入是否符合你期望的形式。\n'
                                           '8. XXE\n'
                                           'XXE （XML 外部实体） 是一种应用程序使用配置不正确的 XML '
                                           '解析器解析外部 XML '
                                           '时，导致的本地文件包含攻击，甚至可以远程代码执行。\n'
                                           'XML '
                                           '有一个鲜为人知的特性，它允许文档作者将远程和本地文件作为实体包含在其 '
                                           'XML 文件中。\n'
                                           '?xml version="1.0" '
                                           'encoding="ISO-8859-1"?\n'
                                           ' !DOCTYPE foo [\n'
                                           '   !ELEMENT foo ANY \n'
                                           '   !ENTITY passwd SYSTEM '
                                           '"file:///etc/passwd" ]\n'
                                           '   foopasswd;/foo\n'
                                           '就像这样， /etc/passwd 文件内容被转储到 XML '
                                           '文件中。\n'
                                           '如果你使用 libxml 可以调用\xa0'
                                           'libxml_disable_entity_loader\xa0'
                                           '来保护自己免受此类攻击。使用前请仔细检查 XML '
                                           '库的默认配置，以确保配置成功。\n'
                                           '9. 在生产环境中不正确的错误报告暴露敏感数据\n'
                                           '[](https://secure.php.net/manual...，可能会在生产环境中因为不正确的错误报告泄露了敏感信息，例如：文件夹结构、数据库结构、连接信息与用户信息。<img>img_node</img>\n'
                                           '你是不希望用户看到这个的吧？\n'
                                           '一般根据你使用的框架或者 CMS '
                                           '，配置方法会有不同的变化。通常框架具有允许你将站点更改为某种生产环境的设置。这样会将所有用户可见的错误消息重定向到日志文件中，并向用户显示非描述性的 '
                                           '500 错误，同时允许你根据错误代码检查。\n'
                                           '但是你应该根据你的 PHP 环境设置：\xa0'
                                           'error_reporting\xa0与\xa0'
                                           'display_errors.\n'
                                           '10. 登录限制\n'
                                           '像登录这样的敏感表单应该有一个严格的速率限制，以防止暴力攻击。保存每个用户在过去几分钟内失败的登录尝试次数，如果该速率超过你定义的阈值，则拒绝进一步登录尝试，直到冷却期结束。还可通过电子邮件通知用户登录失败，以便他们知道自己的账户被成为目标。\n'
                                           '一些其他补充\n'
                                           '\n'
                                           '不要信任从用户传递给你的对象 ID '
                                           '，始终验证用户对请求对象的访问权限\n'
                                           '服务器与使用的库时刻保持最新\n'
                                           '订阅关注安全相关的博客，了解最新的解决方案\n'
                                           '从不在日志中保存用户的密码\n'
                                           '不要将整个代码库存储在 WEB 根目录中\n'
                                           '永远不要在 WEB 根目录创建 Git '
                                           '存储库，除非你希望泄露整个代码库\n'
                                           '始终假设用户的输入是不安全的\n'
                                           '设置系统禁止可疑行为的 IP 显示，例如：工具对 URL '
                                           '随机扫描、爬虫\n'
                                           '不要过分信任第三方代码是安全的\n'
                                           '不要用 Composer 直接从 Github 获取代码\n'
                                           '如果不希望站点被第三方跨域 iframe，请设置反 iframe '
                                           '标示头\n'
                                           '含糊是不安全的\n'
                                           '如果你是缺乏实践经验的运营商或合作开发人员，请确保尽可能时常检查代码\n'
                                           '当你不了解安全功能应该如何工作，或者为什么会安装，请询问知道的人，不要忽视它\n'
                                           '永远不要自己写加密方式，这可能是个坏的方法\n'
                                           '如果你没有足够的熵，请正确播种你的伪随机数生成并舍弃\n'
                                           '如果在互联网上不安全，并有可能被窃取信息，请为这种情况做好准备并制定事件响应计划\n'
                                           '禁用 WEB 根目录列表显示，很多 WEB '
                                           '服务器配置默认都会列出目录内容，这可能导致数据泄露\n'
                                           '客户端验证是不够的，需要再次验证 PHP 中的所有内容\n'
                                           '不惜一切代价避免反序列化用户内容，这可能导致远程代码执行，有关此问题的详细信息，请参阅此文章：\xa0'
                                           'https://paragonie.com/blog/20...\n'
                                           '\n'
                                           '\n'
                                           '小贴士\n'
                                           '我不是一个安全专家，恐无法做到事无巨细。尽管编写安全软件是一个非常痛苦的过程，但还是可以通过遵循一些基本规则，编写合理安全的应用程序。其实，很多框架在这方面也帮我们做了很多工作。\n'
                                           '在问题发生之前，安全性问题并不像语法错误等可以在开发阶段追踪到。因此，在编写代码的过程中，应该时刻有规避安全风险的意识。如果你迫于业务需求的压力而不得不暂时忽略一些安全防范的工作，我想你有必要事先告知大家这样做的潜在风险。\n'
                                           '如果你从这篇文章有所收益，也请把它分享给你的朋友们把，让我们共建安全网站。\n'
                                           '文章转自：https://learnku.com/php/t/24930 '
                                           '更多文章：https://learnku.com/laravel/c...\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           'href="https://creativecommons.org/licenses/by-nc-nd/4.0/"><img>img_node</img>举报\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '赞|\n'
                                           '62 收藏|48\n'
                                           '\n'
                                           '                    OA_show(3);\n'
                                           '                \n'
                                           '你可能感兴趣的\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '2 条评论\n'
                                           '\n'
                                           '默认排序\n'
                                           '时间排序\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '<img>img_node</img>\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           'guanhui07\n'
                                           '\n'
                                           '  ·  3 天前\n'
                                           '\n'
                                           '总结了\n'
                                           '\n'
                                           '\n'
                                           '总结了\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '赞\n'
                                           '\n'
                                           '\n'
                                           '回复\n'
                                           '\n'
                                           '取消\n'
                                           '保存\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '添加回复\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '<img>img_node</img>\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           'GhostCoder\n'
                                           '\n'
                                           '  ·  2 天前\n'
                                           '\n'
                                           '顶一发\n'
                                           '\n'
                                           '\n'
                                           '顶一发\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '赞\n'
                                           '\n'
                                           '\n'
                                           '回复\n'
                                           '\n'
                                           '取消\n'
                                           '保存\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '添加回复\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '载入中...\n'
                                           '显示更多评论\n'
                                           '\n'
                                           '\n'
                                           '<img>img_node</img>\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           'placeholder="文明社会，理性评论">\n'
                                           '\n'
                                           '\n'
                                           '发布评论\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '<img>img_node</img>\n'
                                           '\n'
                                           '                    '
                                           '.job-recommend-area '
                                           'a:not(:last-of-type) '
                                           '{margin-bottom:10px; display: '
                                           'block}\n'
                                           '                    '
                                           '.job-recommend-area a:hover '
                                           '{text-decoration: none;}\n'
                                           '                \n'
                                           '\n'
                                           '\n'
                                           '推广链接\n'
                                           '\n'
                                           '\n'
                                           '                            '
                                           'OA_show(7);\n'
                                           '                            '
                                           'OA_show(9);\n'
                                           '                            '
                                           'OA_show(10);\n'
                                           '                            '
                                           'OA_show(15);\n'
                                           '                            '
                                           'OA_show(16);\n'
                                           '                        \n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '                    .job-recommend '
                                           '{margin-bottom: 30px;}\n'
                                           '                    .job-title {\n'
                                           '                        font-size: '
                                           '14px;\n'
                                           '                        color: '
                                           '#017E66;\n'
                                           '                        '
                                           'font-weight: 500;\n'
                                           '                        '
                                           'background: #BFE6D7;\n'
                                           '                        margin: '
                                           '0;\n'
                                           '                        '
                                           'padding-top: 6px;\n'
                                           '                        '
                                           'padding-bottom: 6px;\n'
                                           '                        '
                                           'text-align: center;\n'
                                           '                    }\n'
                                           '                    '
                                           '.job-recommend-area {\n'
                                           '                      padding: '
                                           '13px;\n'
                                           '                      border: 3px '
                                           'solid #EBF7F3;\n'
                                           '                      border-top: '
                                           'none;\n'
                                           '                    }\n'
                                           '                    \n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '                            '
                                           'OA_show(1);\n'
                                           '                        \n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '目录\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '×Close\n'
                                           '\n'
                                           '分享\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '                    分享到微博？\n'
                                           '                \n'
                                           '\n'
                                           '\n'
                                           '取消\n'
                                           '分享\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           'Close\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '我要该，理由是：\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '返回重选\n'
                                           '取消\n'
                                           '提交\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           'Close\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           'SEO标题：\n'
                                           '\n'
                                           '\n'
                                           'SEO描述：\n'
                                           '\n'
                                           '\n'
                                           'SEO keywords：\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '取消\n'
                                           '提交\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '在 SegmentFault，学习技能、解决问题\n'
                                           '每个月，我们帮助 1000 '
                                           '万的开发者解决各种各样的技术问题。并助力他们在技术能力、职业生涯、影响力上获得提升。\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '免费注册\n'
                                           '立即登录\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '    OA_show(4);\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '产品\n'
                                           '热门问答\n'
                                           '热门专栏\n'
                                           '热门讲堂\n'
                                           '最新活动\n'
                                           '圈子\n'
                                           '酷工作\n'
                                           '移动客户端\n'
                                           '\n'
                                           '\n'
                                           '资源\n'
                                           '每周精选\n'
                                           '用户排行榜\n'
                                           '徽章\n'
                                           '帮助中心\n'
                                           '声望与权限\n'
                                           '社区服务中心\n'
                                           '开发手册\n'
                                           '\n'
                                           '\n'
                                           '商务\n'
                                           '人才服务\n'
                                           '企业培训\n'
                                           '活动策划\n'
                                           '广告投放\n'
                                           '区块链解决方案\n'
                                           '合作联系\n'
                                           '\n'
                                           '\n'
                                           '关于\n'
                                           '关于我们\n'
                                           '加入我们\n'
                                           '联系我们\n'
                                           '\n'
                                           '\n'
                                           '关注\n'
                                           '产品技术日志\n'
                                           '社区运营日志\n'
                                           '市场运营日志\n'
                                           '团队日志\n'
                                           '社区访谈\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '微信\n'
                                           '\n'
                                           '\n'
                                           '新浪微博\n'
                                           '\n'
                                           '\n'
                                           'Github\n'
                                           '\n'
                                           '\n'
                                           'Twitter\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '条款\n'
                                           '服务条款\n'
                                           '内容许可\n'
                                           '\n'
                                           '<img>img_node</img>\n'
                                           '\n'
                                           '扫一扫下载 App\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '            Copyright  2011-2019 '
                                           'SegmentFault. 当前呈现版本 19.02.27\n'
                                           '浙ICP备 15005796号-2\n'
                                           '浙公网安备 33010602002000号\n'
                                           '杭州堆栈科技有限公司版权所有\n'
                                           'CDN 存储服务由 又拍云 赞助提供 \n'
                                           '\n'
                                           '\n'
                                           '移动版\n'
                                           '桌面版\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '回顶部\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '手机号 或 Email\n'
                                           'placeholder="11 位手机号 或 Email"\n'
                                           '                           '
                                           'autocomplete="off">\n'
                                           '                \n'
                                           '\n'
                                           '密码忘记密码\n'
                                           'placeholder="请输入密码">\n'
                                           '                \n'
                                           '\n'
                                           '手机验证码登录\n'
                                           '\n'
                                           '\n'
                                           '登录\n'
                                           '                    \n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '更多登录方式\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '                    注册新账号\n'
                                           '            \n'
                                           '\n'
                                           '登录即表示你同意网站的《服务条款》 \n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '你的名字\n'
                                           'placeholder="真实姓名或常用昵称">\n'
                                           '                \n'
                                           '\n'
                                           '手机号\n'
                                           'placeholder="11 位手机号">\n'
                                           '                \n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '<img>img_node</img>\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '                                '
                                           '获取验证码\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '密码\n'
                                           'placeholder="不少于 6 位的密码">\n'
                                           '                \n'
                                           '\n'
                                           '注册\n'
                                           '                    \n'
                                           '\n'
                                           '\n'
                                           '更多登录方式\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '                    已有账号登录\n'
                                           '            \n'
                                           '\n'
                                           '登录即表示你同意网站的《服务条款》 \n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '手机号\n'
                                           'placeholder="11 位手机号"\n'
                                           '                           '
                                           'autocomplete="off">\n'
                                           '                    \n'
                                           '\n'
                                           '\n'
                                           '验证码\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '获取验证码\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '密码登录（手机号或 Email）\n'
                                           '\n'
                                           '\n'
                                           '登录\n'
                                           '                    \n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '更多登录方式\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '                    注册新账号\n'
                                           '            \n'
                                           '\n'
                                           '登录即表示你同意网站的《服务条款》 \n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '            为了保证账号安全，请先绑定手机\n'
                                           '        \n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '手机号码\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '验证码\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '获取验证码\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '    window.serverTime = '
                                           '1554544546000;\n'
                                           '\n'
                                           '\n'
                                           '    (function (w) {\n'
                                           '        w.SF = {\n'
                                           '            staticUrl: '
                                           '"https://cdn.segmentfault.com/v-5c8b4d77"\n'
                                           '        };\n'
                                           '        w.SF.token = (function () '
                                           '{\n'
                                           "    var _qV7 = 'aee'//'UG'\n"
                                           "+//'FXa'\n"
                                           "'f4'+''///*'bR'*/'bR'\n"
                                           "+//'s'\n"
                                           "'7e'+//'SW9'\n"
                                           "'41'+//'XO'\n"
                                           "'5bd'+//'ToI'\n"
                                           "'71'+'n6F'//'n6F'\n"
                                           "+//'q8a'\n"
                                           "'b40'+'4'//'80f'\n"
                                           "+//'0'\n"
                                           "'40'+'5'//'9MA'\n"
                                           "+'75e'//'F'\n"
                                           "+'7'//'LBy'\n"
                                           "+'b27'//'OVM'\n"
                                           "+//'FBt'\n"
                                           "'6'+'79'//'Ye'\n"
                                           "+'f'//'7C'\n"
                                           ', _z6rd6 = [[14,17]];\n'
                                           '\n'
                                           '    for (var i = 0; i ',
                                'title': '  PHP 安全问题入门：10 个常见安全问题 + 实例讲解',
                                'uid': '82915b169b5a4fbb90b53bbc7fe55d36'},
                    '_type': 'doc',
                    'highlight': {'title': ['<b '
                                            "style='color:red;font-size:16px;'>PHP</b> "
                                            '安全问题入门：10 个常见安全问题 + 实例讲解']}},
                   {'_id': 'syes9GkBA6lwVY9ni9Y1',
                    '_index': 'sifou',
                    '_score': 8.053757,
                    '_source': {'action_type': '文章',
                                'content': '\n'
                                           '<img>img_node</img>\n'
                                           '文章转自：https://learnku.com/php/t/24930 '
                                           '更多文章：https://learnku.com/laravel/c...\n'
                                           '\n'
                                           '相对于其他几种语言来说， PHP 在 web '
                                           '建站方面有更大的优势，即使是新手，也能很容易搭建一个网站出来。但这种优势也容易带来一些负面影响，因为很多的 '
                                           'PHP 教程没有涉及到安全方面的知识。\n'
                                           '此帖子分为几部分，每部分会涵盖不同的安全威胁和应对策略。但是，这并不是说你做到这几点以后，就一定能避免你的网站出现任何问题。如果你想提高你的网站安全性的话，你应该继续通过阅读书籍或者文章，来研究如何提高你的网站安全性\n'
                                           '出于演示需要，代码可能不是很完美。日常开发过程中，很多代码都包含在了框架跟各种库里面。作为一个后台开发，你不仅要熟练基本的CURD，更要知道如何保护你的数据。\n'
                                           '1.  SQL  注入\n'
                                           '我赌一包辣条，你肯定会看到这里。 SQL '
                                           '注入是对您网站最大的威胁之一，如果您的数据库受到别人的 SQL '
                                           '注入的攻击的话，别人可以转出你的数据库，也许还会产生更严重的后果。\n'
                                           '网站要从数据库中获取动态数据，就必须执行 SQL 语句，举例如下：\n'
                                           '?php\n'
                                           '\n'
                                           "$username = $_GET['username'];\n"
                                           '$query = "SELECT * FROM users '
                                           'WHERE username = \'$username\'";\n'
                                           '\n'
                                           '攻击者控制通过 GET 和 POST 发送的查询（或者例如 UA '
                                           '的一些其他查询）。一般情况下，你希望查询户名为「 peter '
                                           '」的用户产生的 SQL 语句如下：\n'
                                           'SELECT * FROM users WHERE username '
                                           "= 'peter'\n"
                                           "但是，攻击者发送了特定的用户名参数，例如：' OR '1'='1\n"
                                           '这就会导致 SQL 语句变成这样：\n'
                                           'SELECT * FROM users WHERE username '
                                           "= 'peter' OR '1' = '1'\n"
                                           '这样，他就能在不需要密码的情况下导出你的整个用户表的数据了。\n'
                                           '那么，我们如何防止这类事故的发生呢？主流的解决方法有两种。转义用户输入的数据或者使用封装好的语句。转义的方法是封装好一个函数，用来对用户提交的数据进行过滤，去掉有害的标签。但是，我不太推荐使用这个方法，因为比较容易忘记在每个地方都做此处理。\n'
                                           '下面，我来介绍如何使用 PDO 执行封装好的语句（ mysqi '
                                           '也一样）：\n'
                                           "$username = $_GET['username'];\n"
                                           "$query = $pdo-prepare('SELECT * "
                                           'FROM users WHERE username = '
                                           ":username');\n"
                                           "$query-execute(['username' = "
                                           '$username]);\n'
                                           '$data = $query-fetch();\n'
                                           '动态数据的每个部分都以：做前缀。然后将所有参数作为数组传递给执行函数，看起来就像 '
                                           'PDO 为你转义了有害数据一样。\n'
                                           '几乎所有的数据库驱动程序都支持封装好的语句，没有理由不使用它们！养成使用他们的习惯，以后就不会忘记了。\n'
                                           '你也可以参考 phpdelusions 中的一篇关于动态构建 SQL '
                                           '查询时处理安全问题的文章。链接： \xa0'
                                           'https://phpdelusions.net/pdo/... '
                                           '。\n'
                                           '2. XSS\n'
                                           'XSS 又叫 CSS (Cross Site Script) '
                                           '，跨站脚本攻击。它指的是恶意攻击者往 Web 页面里插入恶意 '
                                           'html 代码，当用户浏览该页之时，嵌入其中 Web 里面的 '
                                           'html 代码会被执行，从而达到恶意攻击用户的特殊目的。\n'
                                           '下面以一个搜索页面为例子：\n'
                                           'body\n'
                                           '?php\n'
                                           "$searchQuery = $_GET['q'];\n"
                                           '/* some search magic here */\n'
                                           '?\n'
                                           'h1You searched for: ?php echo '
                                           '$searchQuery; ?/h1\n'
                                           'pWe found: Absolutely nothing '
                                           'because this is a demo/p\n'
                                           '/body\n'
                                           '因为我们把用户的内容直接打印出来，不经过任何过滤，非法用户可以拼接 '
                                           'URL：\n'
                                           'search.php?q=%3Cscript%3Ealert(1)%3B%3C%2Fscript%3E\n'
                                           'PHP 渲染出来的内容如下，可以看到 Javascript '
                                           '代码会被直接执行：\n'
                                           'body\n'
                                           'h1You searched for: '
                                           'scriptalert(1);/script/h1\n'
                                           'pWe found: Absolutely nothing '
                                           'because this is a demo/p\n'
                                           '/body\n'
                                           '问：JS 代码被执行有什么大不了的?\n'
                                           'Javascript 可以:\n'
                                           '\n'
                                           '偷走你用户浏览器里的 Cookie；\n'
                                           '通过浏览器的记住密码功能获取到你的站点登录账号和密码；\n'
                                           '盗取用户的机密信息；\n'
                                           '你的用户在站点上能做到的事情，有了 JS '
                                           '权限执行权限就都能做，也就是说 A 用户可以模拟成为任何用户；\n'
                                           '在你的网页中嵌入恶意代码；\n'
                                           '...\n'
                                           '\n'
                                           '问：如何防范此问题呢?\n'
                                           '好消息是比较先进的浏览器现在已经具备了一些基础的 XSS '
                                           '防范功能，不过请不要依赖与此。\n'
                                           '正确的做法是坚决不要相信用户的任何输入，并过滤掉输入中的所有特殊字符。这样就能消灭绝大部分的 '
                                           'XSS 攻击：\n'
                                           '?php\n'
                                           '\n'
                                           '$searchQuery = '
                                           'htmlentities($searchQuery, '
                                           'ENT_QUOTES);\n'
                                           '或者你可以使用模板引擎\xa0Twig\xa0'
                                           '，一般的模板引擎都会默认为输出加上 htmlentities '
                                           '防范。\n'
                                           '如果你保持了用户的输入内容，在输出时也要特别注意，在以下的例子中，我们允许用户填写自己的博客链接：\n'
                                           'body\n'
                                           '  a href="?php echo $homepageUrl; '
                                           '?"Visit Users homepage/a\n'
                                           '/body\n'
                                           '以上代码可能第一眼看不出来有问题，但是假设用户填入以下内容：\n'
                                           '#" onclick="alert(1)\n'
                                           '会被渲染为：\n'
                                           'body\n'
                                           '  a href="#" '
                                           'onclick="alert(1)"Visit Users '
                                           'homepage/a\n'
                                           '/body\n'
                                           '永远永远不要相信用户输入的数据，或者，永远都假设用户的内容是有攻击性的，态度端正了，然后小心地处理好每一次的用户输入和输出。\n'
                                           '另一个控制 XSS 攻击的方法是提供一个 CSP Meta '
                                           '标签，或者标头信息，更多详情请见：\xa0'
                                           'https://www.html5rocks.com/en...\n'
                                           '另外种 Cookie 时，如果无需 JS 读取的话，请必须设置为 '
                                           '"HTTP ONLY"。这个设置可以令 JavaScript '
                                           '无法读取 PHP 端种的 Cookie。\n'
                                           '3. XSRF/CSRF\n'
                                           'CSRF '
                                           '是跨站请求伪造的缩写，它是攻击者通过一些技术手段欺骗用户去访问曾经认证过的网站并运行一些操作。\n'
                                           '虽然此处展示的例子是 GET 请求，但只是相较于 POST '
                                           '更容易理解，并非防护手段，两者都不是私密的 Cookies '
                                           '或者多步表单。\n'
                                           '假如你有一个允许用户删除账户的页面，如下所示：\n'
                                           '?php\n'
                                           '//delete-account.php\n'
                                           '\n'
                                           "$confirm = $_GET['confirm'];\n"
                                           '\n'
                                           "if($confirm === 'yes') {\n"
                                           '  //goodbye\n'
                                           '}\n'
                                           '攻击者可以在他的站点上构建一个触发这个 URL 的表单（同样适用于 '
                                           'POST 的表单），或者将 URL 加载为图片诱惑用户点击：\n'
                                           'img '
                                           'src="https://example.com/delete-account.php?confirm=yes" '
                                           '/\n'
                                           '用户一旦触发，就会执行删除账户的指令，眨眼你的账户就消失了。\n'
                                           '防御这样的攻击比防御 XSS 与 SQL 注入更复杂一些。\n'
                                           '最常用的防御方法是生成一个 CSRF 令牌加密安全字符串，一般称其为 '
                                           'Token，并将 Token 存储于 Cookie 或者 '
                                           'Session 中。\n'
                                           '每次你在网页构造表单时，将 Token '
                                           '令牌放在表单中的隐藏字段，表单请求服务器以后会根据用户的 '
                                           'Cookie 或者 Session 里的 Token '
                                           '令牌比对，校验成功才给予通过。\n'
                                           '由于攻击者无法知道 Token 令牌的内容（每个表单的 Token '
                                           '令牌都是随机的），因此无法冒充用户。\n'
                                           '?php /* 你嵌入表单的页面 */ ?\n'
                                           '\n'
                                           'form action="/delete-account.php" '
                                           'method="post"\n'
                                           '  input type="hidden" name="csrf" '
                                           'value="?php echo '
                                           '$_SESSION[\'csrf\']; ?"\n'
                                           '  input type="hidden" '
                                           'name="confirm" value="yes" /\n'
                                           '  input type="submit" '
                                           'value="Delete my account" /\n'
                                           '/form\n'
                                           '## \n'
                                           '\n'
                                           '?php\n'
                                           '//delete-account.php\n'
                                           '\n'
                                           "$confirm = $_POST['confirm'];\n"
                                           "$csrf = $_POST['csrf'];\n"
                                           '$knownGoodToken = '
                                           "$_SESSION['csrf'];\n"
                                           '\n'
                                           'if($csrf !== $knownGoodToken) {\n'
                                           "  die('Invalid request');\n"
                                           '}\n'
                                           '\n'
                                           "if($confirm === 'yes') {\n"
                                           '  //goodbye\n'
                                           '}\n'
                                           '请注意，这是个非常简单的示例，你可以加入更多的代码。如果你使用的是像 '
                                           'Symfony 这样的 PHP 框架，那么自带了 CSRF '
                                           '令牌的功能。\n'
                                           '你还可以查看关于 OWASP '
                                           '更详细的问题和更多防御机制的文章：\xa0'
                                           'https://github.com/OWASP/CheatS....\n'
                                           '4. LFI\n'
                                           'LFI （本地文件包含） 是一个用户未经验证从磁盘读取文件的漏洞。\n'
                                           '我经常遇到编程不规范的路由代码示例，它们不验证过滤用户的输入。我们用以下文件为例，将它要渲染的模板文件用 '
                                           'GET 请求加载。\n'
                                           'body\n'
                                           '?php\n'
                                           "  $page = $_GET['page'];\n"
                                           '  if(!$page) {\n'
                                           "    $page = 'main.php';\n"
                                           '  }\n'
                                           '  include($page);\n'
                                           '?\n'
                                           '/body\n'
                                           '由于 Include '
                                           '可以加载任何文件，不仅仅是PHP，攻击者可以将系统上的任何文件作为包含目标传递。\n'
                                           'index.php?page=../../etc/passwd\n'
                                           '这将导致 /etc/passwd 文件被读取并展示在浏览器上。\n'
                                           '要防御此类攻击，你必须仔细考虑允许用户输入的类型，并删除可能有害的字符，如输入字符中的“.” '
                                           '“/” “”。\n'
                                           '如果你真的想使用像这样的路由系统（我不建议以任何方式），你可以自动附加 '
                                           'PHP 扩展，删除任何非 [a-zA-Z0-9-_] '
                                           '的字符，并指定从专用的模板文件夹中加载，以免被包含任何非模板文件。\n'
                                           '我在不同的开发文档中，多次看到造成此类漏洞的 PHP '
                                           '代码。从一开始就要有清晰的设计思路，允许所需要包含的文件类型，并删除掉多余的内容。你还可以构造要读取文件的绝对路径，并验证文件是否存在来作为保护，而不是任何位置都给予读取。\n'
                                           '5. 不充分的密码哈希\n'
                                           '大部分的 Web '
                                           '应用需要保存用户的认证信息。如果密码哈希做的足够好，在你的网站被攻破时，即可保护用户的密码不被非法读取。\n'
                                           '首先，最不应该做的事情，就是把用户密码明文储存起来。大部分的用户会在多个网站上使用同一个密码，这是不可改变的事实。当你的网站被攻破，意味着用户的其他网站的账号也被攻破了。\n'
                                           '其次，你不应该使用简单的哈希算法，事实上所有没有专门为密码哈希优化的算法都不应使用。哈希算法如  '
                                           'MD5 或者 SHA '
                                           '设计初衷就是执行起来非常快。这不是你需要的，密码哈希的终极目标就是让黑客花费无穷尽的时间和精力都无法破解出来密码。\n'
                                           '另外一个比较重要的点是你应该为密码哈希加盐（Salt），加盐处理避免了两个同样的密码会产生同样哈希的问题。\n'
                                           '以下使用 MD5 来做例子，所以请千万不要使用 MD5 '
                                           '来哈希你的密码， MD5 是不安全的。\n'
                                           '假如我们的用户 user1 和 user315 都有相同的密码 '
                                           'ilovecats123，这个密码虽然看起来是强密码，有字母有数字，但是在数据库里，两个用户的密码哈希数据将会是相同的：5e2b4d823db9d044ecd5e084b6d33ea5 '
                                           '。\n'
                                           '如果一个如果黑客拿下了你的网站，获取到了这些哈希数据，他将不需要去暴力破解用户 '
                                           'user315 '
                                           '的密码。我们要尽量让他花大精力来破解你的密码，所以我们对数据进行加盐处理：\n'
                                           '?php\n'
                                           '//warning: '
                                           '!!这是一个很不安全的密码哈希例子，请不要使用!!\n'
                                           '\n'
                                           "$password = 'cat123';\n"
                                           '$salt = random_bytes(20);\n'
                                           '\n'
                                           '$hash = md5($password . $salt);\n'
                                           '最后在保存你的唯一密码哈希数据时，请不要忘记连 $salt '
                                           '也已经保存，否则你将无法验证用户。\n'
                                           '在当下，最好的密码哈希选项是 '
                                           'bcrypt，这是专门为哈希密码而设计的哈希算法，同时这套哈希算法里还允许你配置一些参数来加大破解的难度。\n'
                                           '新版的 PHP 中也自带了安全的密码哈希函数\xa0'
                                           'password_hash\xa0'
                                           '，此函数已经包含了加盐处理。对应的密码验证函数为\xa0'
                                           'password_verify\xa0'
                                           '用来检测密码是否正确。password_verify '
                                           '还可有效防止\xa0时序攻击.\n'
                                           '以下是使用的例子：\n'
                                           '?php\n'
                                           '\n'
                                           '//user signup\n'
                                           "$password = $_POST['password'];\n"
                                           '$hashedPassword = '
                                           'password_hash($password, '
                                           'PASSWORD_DEFAULT);\n'
                                           '\n'
                                           '//login\n'
                                           "$password = $_POST['password'];\n"
                                           "$hash = '1234'; //load this value "
                                           'from your db\n'
                                           '\n'
                                           'if(password_verify($password, '
                                           '$hash)) {\n'
                                           "  echo 'Password is valid!';\n"
                                           '} else {\n'
                                           "  echo 'Invalid password.';\n"
                                           '}\n'
                                           '需要澄清的一点是：密码哈希并不是密码加密。哈希（Hash）是将目标文本转换成具有相同长度的、不可逆的杂凑字符串（或叫做消息摘要），而加密（Encrypt）是将目标文本转换成具有不同长度的、可逆的密文。显然他们之间最大的区别是可逆性，在储存密码时，我们要的就是哈希这种不可逆的属性。\n'
                                           '6. 中间人攻击\n'
                                           'MITM （中间人） '
                                           '攻击不是针对服务器直接攻击，而是针对用户进行，攻击者作为中间人欺骗服务器他是用户，欺骗用户他是服务器，从而来拦截用户与网站的流量，并从中注入恶意内容或者读取私密信息，通常发生在公共 '
                                           'WiFi '
                                           '网络中，也有可能发生在其他流量通过的地方，例如ISP运营商。\n'
                                           '对此的唯一防御是使用 HTTPS，使用 HTTPS '
                                           '可以将你的连接加密，并且无法读取或者篡改流量。你可以从\xa0'
                                           "Let's Encrypt\xa0获取免费的 SSL "
                                           '证书，或从其他供应商处购买，这里不详细介绍如何正确配置 WEB '
                                           '服务器，因为这与应用程序安全性无关，且在很大程度上取决于你的设置。\n'
                                           '你还可以采取一些措施使 HTTPS 更安全，在 WEB '
                                           '服务器配置加上\xa0'
                                           'Strict-Transport-Security\xa0'
                                           '标示头，此头部信息告诉浏览器，你的网站始终通过 HTTPS '
                                           '访问，如果未通过 HTTPS '
                                           '将返回错误报告提示浏览器不应显示该页面。\n'
                                           '然而，这里有个明显的问题，如果浏览器之前从未访问过你的网站，则无法知道你使用此标示头，这时候就需要用到 '
                                           'Hstspreload。\n'
                                           '可以在此注册你的网站:\xa0'
                                           'https://hstspreload.org/\n'
                                           '你在此处提交的所有网站都将被标记为仅 HTTPS，并硬编码到 '
                                           'Google '
                                           'Chrome、FireFox、Opera、Safari、IE11 和 '
                                           'Edge 的源代码中。\n'
                                           '你还可以在 DNS 配置中添加\xa0Certification '
                                           'Authority Authorization (CAA) '
                                           "record\xa0，可以仅允许一个证书颁发机构（例如： Let's "
                                           'encrypt）发布你的域名证书，这进一步提高了用户的安全性。\n'
                                           '7. 命令注入\n'
                                           '这可能是服务器遇到的最严重的攻击，命令注入的目标是欺骗服务器执行任意 '
                                           'Shell 命令\n'
                                           '你如果使用\xa0shell_exec\xa0或是 exec '
                                           '函数。让我们做一个小例子，允许用户简单的从服务器 Ping '
                                           '不同的主机。\n'
                                           '?php\n'
                                           '\n'
                                           "$targetIp = $_GET['ip'];\n"
                                           '$output = shell_exec("ping -c 5 '
                                           '$targetIp");\n'
                                           '输出将包括对目标主机 Ping 5次。除非采用 sh 命令执行 '
                                           'Shell 脚本，否则攻击者可以执行想要的任何操作。\n'
                                           'ping.php?ip=8.8.8.8;ls -l /etc\n'
                                           'Shell 将执行 Ping '
                                           '和由攻击者拼接的第二个命令，这显然是非常危险的。\n'
                                           '感谢 PHP 提供了一个函数来转义 Shell 参数。\n'
                                           'escapeshellarg\xa0'
                                           '转义用户的输入并将其封装成单引号。\n'
                                           '?php\n'
                                           '\n'
                                           '$targetIp = '
                                           "escapeshellarg($_GET['ip']);\n"
                                           '$output = shell_exec("ping -c 5 '
                                           '$targetIp");\n'
                                           '现在你的命令应该是相当安全的，就个人而言，我仍然避免使用 PHP '
                                           '调用外部命令，但这完全取决于你自己的喜好。\n'
                                           '另外，我建议进一步验证用户输入是否符合你期望的形式。\n'
                                           '8. XXE\n'
                                           'XXE （XML 外部实体） 是一种应用程序使用配置不正确的 XML '
                                           '解析器解析外部 XML '
                                           '时，导致的本地文件包含攻击，甚至可以远程代码执行。\n'
                                           'XML '
                                           '有一个鲜为人知的特性，它允许文档作者将远程和本地文件作为实体包含在其 '
                                           'XML 文件中。\n'
                                           '?xml version="1.0" '
                                           'encoding="ISO-8859-1"?\n'
                                           ' !DOCTYPE foo [\n'
                                           '   !ELEMENT foo ANY \n'
                                           '   !ENTITY passwd SYSTEM '
                                           '"file:///etc/passwd" ]\n'
                                           '   foopasswd;/foo\n'
                                           '就像这样， /etc/passwd 文件内容被转储到 XML '
                                           '文件中。\n'
                                           '如果你使用 libxml 可以调用\xa0'
                                           'libxml_disable_entity_loader\xa0'
                                           '来保护自己免受此类攻击。使用前请仔细检查 XML '
                                           '库的默认配置，以确保配置成功。\n'
                                           '9. 在生产环境中不正确的错误报告暴露敏感数据\n'
                                           '[](https://secure.php.net/manual...，可能会在生产环境中因为不正确的错误报告泄露了敏感信息，例如：文件夹结构、数据库结构、连接信息与用户信息。<img>img_node</img>\n'
                                           '你是不希望用户看到这个的吧？\n'
                                           '一般根据你使用的框架或者 CMS '
                                           '，配置方法会有不同的变化。通常框架具有允许你将站点更改为某种生产环境的设置。这样会将所有用户可见的错误消息重定向到日志文件中，并向用户显示非描述性的 '
                                           '500 错误，同时允许你根据错误代码检查。\n'
                                           '但是你应该根据你的 PHP 环境设置：\xa0'
                                           'error_reporting\xa0与\xa0'
                                           'display_errors.\n'
                                           '10. 登录限制\n'
                                           '像登录这样的敏感表单应该有一个严格的速率限制，以防止暴力攻击。保存每个用户在过去几分钟内失败的登录尝试次数，如果该速率超过你定义的阈值，则拒绝进一步登录尝试，直到冷却期结束。还可通过电子邮件通知用户登录失败，以便他们知道自己的账户被成为目标。\n'
                                           '一些其他补充\n'
                                           '\n'
                                           '不要信任从用户传递给你的对象 ID '
                                           '，始终验证用户对请求对象的访问权限\n'
                                           '服务器与使用的库时刻保持最新\n'
                                           '订阅关注安全相关的博客，了解最新的解决方案\n'
                                           '从不在日志中保存用户的密码\n'
                                           '不要将整个代码库存储在 WEB 根目录中\n'
                                           '永远不要在 WEB 根目录创建 Git '
                                           '存储库，除非你希望泄露整个代码库\n'
                                           '始终假设用户的输入是不安全的\n'
                                           '设置系统禁止可疑行为的 IP 显示，例如：工具对 URL '
                                           '随机扫描、爬虫\n'
                                           '不要过分信任第三方代码是安全的\n'
                                           '不要用 Composer 直接从 Github 获取代码\n'
                                           '如果不希望站点被第三方跨域 iframe，请设置反 iframe '
                                           '标示头\n'
                                           '含糊是不安全的\n'
                                           '如果你是缺乏实践经验的运营商或合作开发人员，请确保尽可能时常检查代码\n'
                                           '当你不了解安全功能应该如何工作，或者为什么会安装，请询问知道的人，不要忽视它\n'
                                           '永远不要自己写加密方式，这可能是个坏的方法\n'
                                           '如果你没有足够的熵，请正确播种你的伪随机数生成并舍弃\n'
                                           '如果在互联网上不安全，并有可能被窃取信息，请为这种情况做好准备并制定事件响应计划\n'
                                           '禁用 WEB 根目录列表显示，很多 WEB '
                                           '服务器配置默认都会列出目录内容，这可能导致数据泄露\n'
                                           '客户端验证是不够的，需要再次验证 PHP 中的所有内容\n'
                                           '不惜一切代价避免反序列化用户内容，这可能导致远程代码执行，有关此问题的详细信息，请参阅此文章：\xa0'
                                           'https://paragonie.com/blog/20...\n'
                                           '\n'
                                           '\n'
                                           '小贴士\n'
                                           '我不是一个安全专家，恐无法做到事无巨细。尽管编写安全软件是一个非常痛苦的过程，但还是可以通过遵循一些基本规则，编写合理安全的应用程序。其实，很多框架在这方面也帮我们做了很多工作。\n'
                                           '在问题发生之前，安全性问题并不像语法错误等可以在开发阶段追踪到。因此，在编写代码的过程中，应该时刻有规避安全风险的意识。如果你迫于业务需求的压力而不得不暂时忽略一些安全防范的工作，我想你有必要事先告知大家这样做的潜在风险。\n'
                                           '如果你从这篇文章有所收益，也请把它分享给你的朋友们把，让我们共建安全网站。\n'
                                           '文章转自：https://learnku.com/php/t/24930 '
                                           '更多文章：https://learnku.com/laravel/c...\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           'href="https://creativecommons.org/licenses/by-nc-nd/4.0/"><img>img_node</img>举报\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '赞|\n'
                                           '62 收藏|48\n'
                                           '\n'
                                           '                    OA_show(3);\n'
                                           '                \n'
                                           '你可能感兴趣的\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '2 条评论\n'
                                           '\n'
                                           '默认排序\n'
                                           '时间排序\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '<img>img_node</img>\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           'guanhui07\n'
                                           '\n'
                                           '  ·  3 天前\n'
                                           '\n'
                                           '总结了\n'
                                           '\n'
                                           '\n'
                                           '总结了\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '赞\n'
                                           '\n'
                                           '\n'
                                           '回复\n'
                                           '\n'
                                           '取消\n'
                                           '保存\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '添加回复\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '<img>img_node</img>\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           'GhostCoder\n'
                                           '\n'
                                           '  ·  2 天前\n'
                                           '\n'
                                           '顶一发\n'
                                           '\n'
                                           '\n'
                                           '顶一发\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '赞\n'
                                           '\n'
                                           '\n'
                                           '回复\n'
                                           '\n'
                                           '取消\n'
                                           '保存\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '添加回复\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '载入中...\n'
                                           '显示更多评论\n'
                                           '\n'
                                           '\n'
                                           '<img>img_node</img>\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           'placeholder="文明社会，理性评论">\n'
                                           '\n'
                                           '\n'
                                           '发布评论\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '<img>img_node</img>\n'
                                           '\n'
                                           '                    '
                                           '.job-recommend-area '
                                           'a:not(:last-of-type) '
                                           '{margin-bottom:10px; display: '
                                           'block}\n'
                                           '                    '
                                           '.job-recommend-area a:hover '
                                           '{text-decoration: none;}\n'
                                           '                \n'
                                           '\n'
                                           '\n'
                                           '推广链接\n'
                                           '\n'
                                           '\n'
                                           '                            '
                                           'OA_show(7);\n'
                                           '                            '
                                           'OA_show(9);\n'
                                           '                            '
                                           'OA_show(10);\n'
                                           '                            '
                                           'OA_show(15);\n'
                                           '                            '
                                           'OA_show(16);\n'
                                           '                        \n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '                    .job-recommend '
                                           '{margin-bottom: 30px;}\n'
                                           '                    .job-title {\n'
                                           '                        font-size: '
                                           '14px;\n'
                                           '                        color: '
                                           '#017E66;\n'
                                           '                        '
                                           'font-weight: 500;\n'
                                           '                        '
                                           'background: #BFE6D7;\n'
                                           '                        margin: '
                                           '0;\n'
                                           '                        '
                                           'padding-top: 6px;\n'
                                           '                        '
                                           'padding-bottom: 6px;\n'
                                           '                        '
                                           'text-align: center;\n'
                                           '                    }\n'
                                           '                    '
                                           '.job-recommend-area {\n'
                                           '                      padding: '
                                           '13px;\n'
                                           '                      border: 3px '
                                           'solid #EBF7F3;\n'
                                           '                      border-top: '
                                           'none;\n'
                                           '                    }\n'
                                           '                    \n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '                            '
                                           'OA_show(1);\n'
                                           '                        \n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '目录\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '×Close\n'
                                           '\n'
                                           '分享\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '                    分享到微博？\n'
                                           '                \n'
                                           '\n'
                                           '\n'
                                           '取消\n'
                                           '分享\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           'Close\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '我要该，理由是：\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '返回重选\n'
                                           '取消\n'
                                           '提交\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           'Close\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           'SEO标题：\n'
                                           '\n'
                                           '\n'
                                           'SEO描述：\n'
                                           '\n'
                                           '\n'
                                           'SEO keywords：\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '取消\n'
                                           '提交\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '在 SegmentFault，学习技能、解决问题\n'
                                           '每个月，我们帮助 1000 '
                                           '万的开发者解决各种各样的技术问题。并助力他们在技术能力、职业生涯、影响力上获得提升。\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '免费注册\n'
                                           '立即登录\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '    OA_show(4);\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '产品\n'
                                           '热门问答\n'
                                           '热门专栏\n'
                                           '热门讲堂\n'
                                           '最新活动\n'
                                           '圈子\n'
                                           '酷工作\n'
                                           '移动客户端\n'
                                           '\n'
                                           '\n'
                                           '资源\n'
                                           '每周精选\n'
                                           '用户排行榜\n'
                                           '徽章\n'
                                           '帮助中心\n'
                                           '声望与权限\n'
                                           '社区服务中心\n'
                                           '开发手册\n'
                                           '\n'
                                           '\n'
                                           '商务\n'
                                           '人才服务\n'
                                           '企业培训\n'
                                           '活动策划\n'
                                           '广告投放\n'
                                           '区块链解决方案\n'
                                           '合作联系\n'
                                           '\n'
                                           '\n'
                                           '关于\n'
                                           '关于我们\n'
                                           '加入我们\n'
                                           '联系我们\n'
                                           '\n'
                                           '\n'
                                           '关注\n'
                                           '产品技术日志\n'
                                           '社区运营日志\n'
                                           '市场运营日志\n'
                                           '团队日志\n'
                                           '社区访谈\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '微信\n'
                                           '\n'
                                           '\n'
                                           '新浪微博\n'
                                           '\n'
                                           '\n'
                                           'Github\n'
                                           '\n'
                                           '\n'
                                           'Twitter\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '条款\n'
                                           '服务条款\n'
                                           '内容许可\n'
                                           '\n'
                                           '<img>img_node</img>\n'
                                           '\n'
                                           '扫一扫下载 App\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '            Copyright  2011-2019 '
                                           'SegmentFault. 当前呈现版本 19.02.27\n'
                                           '浙ICP备 15005796号-2\n'
                                           '浙公网安备 33010602002000号\n'
                                           '杭州堆栈科技有限公司版权所有\n'
                                           'CDN 存储服务由 又拍云 赞助提供 \n'
                                           '\n'
                                           '\n'
                                           '移动版\n'
                                           '桌面版\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '回顶部\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '手机号 或 Email\n'
                                           'placeholder="11 位手机号 或 Email"\n'
                                           '                           '
                                           'autocomplete="off">\n'
                                           '                \n'
                                           '\n'
                                           '密码忘记密码\n'
                                           'placeholder="请输入密码">\n'
                                           '                \n'
                                           '\n'
                                           '手机验证码登录\n'
                                           '\n'
                                           '\n'
                                           '登录\n'
                                           '                    \n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '更多登录方式\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '                    注册新账号\n'
                                           '            \n'
                                           '\n'
                                           '登录即表示你同意网站的《服务条款》 \n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '你的名字\n'
                                           'placeholder="真实姓名或常用昵称">\n'
                                           '                \n'
                                           '\n'
                                           '手机号\n'
                                           'placeholder="11 位手机号">\n'
                                           '                \n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '<img>img_node</img>\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '                                '
                                           '获取验证码\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '密码\n'
                                           'placeholder="不少于 6 位的密码">\n'
                                           '                \n'
                                           '\n'
                                           '注册\n'
                                           '                    \n'
                                           '\n'
                                           '\n'
                                           '更多登录方式\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '                    已有账号登录\n'
                                           '            \n'
                                           '\n'
                                           '登录即表示你同意网站的《服务条款》 \n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '手机号\n'
                                           'placeholder="11 位手机号"\n'
                                           '                           '
                                           'autocomplete="off">\n'
                                           '                    \n'
                                           '\n'
                                           '\n'
                                           '验证码\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '获取验证码\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '密码登录（手机号或 Email）\n'
                                           '\n'
                                           '\n'
                                           '登录\n'
                                           '                    \n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '更多登录方式\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '                    注册新账号\n'
                                           '            \n'
                                           '\n'
                                           '登录即表示你同意网站的《服务条款》 \n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '            为了保证账号安全，请先绑定手机\n'
                                           '        \n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '手机号码\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '验证码\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '获取验证码\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '\n'
                                           '    window.serverTime = '
                                           '1554544946000;\n'
                                           '\n'
                                           '\n'
                                           '    (function (w) {\n'
                                           '        w.SF = {\n'
                                           '            staticUrl: '
                                           '"https://cdn.segmentfault.com/v-5c8b4d77"\n'
                                           '        };\n'
                                           '        w.SF.token = (function () '
                                           '{\n'
                                           "    var _pqVx88f = '25d'//'M'\n"
                                           "+'c'//'ECa'\n"
                                           "+//'r2o'\n"
                                           "'f8'+''///*'X'*/'X'\n"
                                           "+//'l'\n"
                                           "'1'+'3e'//'xG'\n"
                                           "+//'Lpr'\n"
                                           "'b18'+'24'//'tS'\n"
                                           "+//'ZxC'\n"
                                           "'70'+//'JGE'\n"
                                           "'ef'+'fd'//'krn'\n"
                                           "+'0'//'C'\n"
                                           "+'8'//'Z'\n"
                                           "+'c78'//'S6v'\n"
                                           "+'1e6'//'5W'\n"
                                           "+''///*'vwn'*/'vwn'\n"
                                           "+'111'//'w'\n"
                                           "+''///*'LIa'*/'LIa'\n"
                                           "+'EpO'//'EpO'\n"
                                           "+/* '2'//'2' "
                                           "*/''+''///*'KK'*/'KK'\n"
                                           "+/* 'lEz'//'lEz' */''+/* 'r'//'r' "
                                           "*/''+/* 'Kn'//'Kn' "
                                           "*/''+''///*'kb'*/'kb'\n"
                                           "+/* 'Qhi'//'Qhi' */''+//'g'\n"
                                           "'7', _C28eyF = [[31,34]];\n"
                                           '\n'
                                           '    for (var i = 0; i ',
                                'title': '  PHP 安全问题入门：10 个常见安全问题 + 实例讲解',
                                'uid': '8b2156e872ef4b6babaac4915066745f'},
                    '_type': 'doc',
                    'highlight': {'title': ['<b '
                                            "style='color:red;font-size:16px;'>PHP</b> "
                                            '安全问题入门：10 个常见安全问题 + 实例讲解']}}],
          'total': 34}}
[07/Apr/2019 09:41:05] "POST / HTTP/1.1" 200 84492
action_type 全部
{'hits': {'hits': [{'_id': '2Ces9GkBA6lwVY9nsNZD',
                    '_index': 'sifou',
                    '_score': 3.7447417,
                    '_source': {'action_type': '文章',
                                'content': '\n'
                                           'Swoole4 协程的出现使得 PHP '
                                           '底层上从原来串行模式变成了并发模式。有很多 PHP '
                                           '的C/C++扩展在开发时未能考虑到并发性、可重入问题，导致无法在Swoole协程中使用。本文会详细讲解如何编写协程并发安全的C/C++代码。\n'
                                           '可重入性\n'
                                           '示例代码：\n'
                                           'int t;\n'
                                           '\n'
                                           'void test1(int *x, int *y) {\n'
                                           '    t = *x;\n'
                                           '    *x = *y;\n'
                                           '    //fun1 函数中可能会存在协程切换\n'
                                           '    fun1();\n'
                                           '    //错误代码\n'
                                           '    *y = t;\n'
                                           '}\n'
                                           '\n'
                                           '\n'
                                           't是一个全局变量或者static静态变量\n'
                                           '在协程A中调用了test1函数，使用了全局变量t\n'
                                           '\n'
                                           '当函数内调用了fun1()，这个函数中如果发生了协程切换，这时假如另外一个协程B也执行了test1函数，那么t的值可能会被修改\n'
                                           '协程B挂起时，重新回到协程A，这时*y = t，会得到一个错误的值\n'
                                           '\n'
                                           '引用栈内存\n'
                                           '这也是一个严重的风险点。协程1将自身栈内存的指针发送给另外一个协程2，协程1退出时会释放协程栈内存。协程2的生命周期长于1，继续读写此内存，就会导致segment '
                                           'fault。\n'
                                           '示例：\n'
                                           'void co1() {\n'
                                           '    char buf[2048];\n'
                                           '    //这里启动一个新的协程，buf 是协程1栈上内存\n'
                                           '    co2(buf);\n'
                                           '    //协程1 退出时会释放栈内存\n'
                                           '}\n'
                                           '\n'
                                           'void co2(char *buf) {\n'
                                           '    for(int i=0; i2048; i++) {\n'
                                           '        Coroutine::sleep(1);\n'
                                           '        //这里 buf 内存可能已经释放了\n'
                                           '        buf[i] = 1;\n'
                                           '    }\n'
                                           '}\n'
                                           '协程安全代码\n'
                                           '为了保证安全性，在Swoole4协程编程中：\n'
                                           '\n'
                                           '不要使用static变量和全局变量，坚持只用局部变量\n'
                                           '若必须访问全局变量，必须保证只用于计算逻辑，不得存在任何IO或Sleep等引起协程切换的操作\n'
                                           '不调用其它任何不可重入的函数\n'
                                           '不要引用栈上内存\n'
                                           '\n',
                                'title': ' 协程 C/C++ 扩展开发指南（1）：内存安全',
                                'uid': '9c7af060cd9c4eb5b80895b67af29164'},
                    '_type': 'doc',
                    'highlight': {'title': ['协程 C/C++ 扩展开发指南（<b '
                                            "style='color:red;font-size:16px;'>1</b>）：内存安全"]}},
                   {'_id': '4Cem9GkBA6lwVY9nj9Ue',
                    '_index': 'sifou',
                    '_score': 3.6312437,
                    '_source': {'action_type': '文章',
                                'content': '\n'
                                           'Swoole4 协程的出现使得 PHP '
                                           '底层上从原来串行模式变成了并发模式。有很多 PHP '
                                           '的C/C++扩展在开发时未能考虑到并发性、可重入问题，导致无法在Swoole协程中使用。本文会详细讲解如何编写协程并发安全的C/C++代码。\n'
                                           '可重入性\n'
                                           '示例代码：\n'
                                           'int t;\n'
                                           '\n'
                                           'void test1(int *x, int *y) {\n'
                                           '    t = *x;\n'
                                           '    *x = *y;\n'
                                           '    //fun1 函数中可能会存在协程切换\n'
                                           '    fun1();\n'
                                           '    //错误代码\n'
                                           '    *y = t;\n'
                                           '}\n'
                                           '\n'
                                           '\n'
                                           't是一个全局变量或者static静态变量\n'
                                           '在协程A中调用了test1函数，使用了全局变量t\n'
                                           '\n'
                                           '当函数内调用了fun1()，这个函数中如果发生了协程切换，这时假如另外一个协程B也执行了test1函数，那么t的值可能会被修改\n'
                                           '协程B挂起时，重新回到协程A，这时*y = t，会得到一个错误的值\n'
                                           '\n'
                                           '引用栈内存\n'
                                           '这也是一个严重的风险点。协程1将自身栈内存的指针发送给另外一个协程2，协程1退出时会释放协程栈内存。协程2的生命周期长于1，继续读写此内存，就会导致segment '
                                           'fault。\n'
                                           '示例：\n'
                                           'void co1() {\n'
                                           '    char buf[2048];\n'
                                           '    //这里启动一个新的协程，buf 是协程1栈上内存\n'
                                           '    co2(buf);\n'
                                           '    //协程1 退出时会释放栈内存\n'
                                           '}\n'
                                           '\n'
                                           'void co2(char *buf) {\n'
                                           '    for(int i=0; i2048; i++) {\n'
                                           '        Coroutine::sleep(1);\n'
                                           '        //这里 buf 内存可能已经释放了\n'
                                           '        buf[i] = 1;\n'
                                           '    }\n'
                                           '}\n'
                                           '协程安全代码\n'
                                           '为了保证安全性，在Swoole4协程编程中：\n'
                                           '\n'
                                           '不要使用static变量和全局变量，坚持只用局部变量\n'
                                           '若必须访问全局变量，必须保证只用于计算逻辑，不得存在任何IO或Sleep等引起协程切换的操作\n'
                                           '不调用其它任何不可重入的函数\n'
                                           '不要引用栈上内存\n'
                                           '\n',
                                'title': ' 协程 C/C++ 扩展开发指南（1）：内存安全',
                                'uid': '7bef6dac8ee349c88c217ad81ec135c2'},
                    '_type': 'doc',
                    'highlight': {'title': ['协程 C/C++ 扩展开发指南（<b '
                                            "style='color:red;font-size:16px;'>1</b>）：内存安全"]}}],
          'total': 324}}
[07/Apr/2019 09:41:06] "POST / HTTP/1.1" 200 7124
action_type 全部
{'hits': {'hits': [{'_id': '2Ces9GkBA6lwVY9nsNZD',
                    '_index': 'sifou',
                    '_score': 3.7447417,
                    '_source': {'action_type': '文章',
                                'content': '\n'
                                           'Swoole4 协程的出现使得 PHP '
                                           '底层上从原来串行模式变成了并发模式。有很多 PHP '
                                           '的C/C++扩展在开发时未能考虑到并发性、可重入问题，导致无法在Swoole协程中使用。本文会详细讲解如何编写协程并发安全的C/C++代码。\n'
                                           '可重入性\n'
                                           '示例代码：\n'
                                           'int t;\n'
                                           '\n'
                                           'void test1(int *x, int *y) {\n'
                                           '    t = *x;\n'
                                           '    *x = *y;\n'
                                           '    //fun1 函数中可能会存在协程切换\n'
                                           '    fun1();\n'
                                           '    //错误代码\n'
                                           '    *y = t;\n'
                                           '}\n'
                                           '\n'
                                           '\n'
                                           't是一个全局变量或者static静态变量\n'
                                           '在协程A中调用了test1函数，使用了全局变量t\n'
                                           '\n'
                                           '当函数内调用了fun1()，这个函数中如果发生了协程切换，这时假如另外一个协程B也执行了test1函数，那么t的值可能会被修改\n'
                                           '协程B挂起时，重新回到协程A，这时*y = t，会得到一个错误的值\n'
                                           '\n'
                                           '引用栈内存\n'
                                           '这也是一个严重的风险点。协程1将自身栈内存的指针发送给另外一个协程2，协程1退出时会释放协程栈内存。协程2的生命周期长于1，继续读写此内存，就会导致segment '
                                           'fault。\n'
                                           '示例：\n'
                                           'void co1() {\n'
                                           '    char buf[2048];\n'
                                           '    //这里启动一个新的协程，buf 是协程1栈上内存\n'
                                           '    co2(buf);\n'
                                           '    //协程1 退出时会释放栈内存\n'
                                           '}\n'
                                           '\n'
                                           'void co2(char *buf) {\n'
                                           '    for(int i=0; i2048; i++) {\n'
                                           '        Coroutine::sleep(1);\n'
                                           '        //这里 buf 内存可能已经释放了\n'
                                           '        buf[i] = 1;\n'
                                           '    }\n'
                                           '}\n'
                                           '协程安全代码\n'
                                           '为了保证安全性，在Swoole4协程编程中：\n'
[07/Apr/2019 09:41:08] "POST / HTTP/1.1" 200 7124
                                           '\n'
                                           '不要使用static变量和全局变量，坚持只用局部变量\n'
                                           '若必须访问全局变量，必须保证只用于计算逻辑，不得存在任何IO或Sleep等引起协程切换的操作\n'
                                           '不调用其它任何不可重入的函数\n'
                                           '不要引用栈上内存\n'
                                           '\n',
                                'title': ' 协程 C/C++ 扩展开发指南（1）：内存安全',
                                'uid': '9c7af060cd9c4eb5b80895b67af29164'},
                    '_type': 'doc',
                    'highlight': {'title': ['协程 C/C++ 扩展开发指南（<b '
                                            "style='color:red;font-size:16px;'>1</b>）：内存安全"]}},
                   {'_id': '4Cem9GkBA6lwVY9nj9Ue',
                    '_index': 'sifou',
                    '_score': 3.6312437,
                    '_source': {'action_type': '文章',
                                'content': '\n'
                                           'Swoole4 协程的出现使得 PHP '
                                           '底层上从原来串行模式变成了并发模式。有很多 PHP '
                                           '的C/C++扩展在开发时未能考虑到并发性、可重入问题，导致无法在Swoole协程中使用。本文会详细讲解如何编写协程并发安全的C/C++代码。\n'
                                           '可重入性\n'
                                           '示例代码：\n'
                                           'int t;\n'
                                           '\n'
                                           'void test1(int *x, int *y) {\n'
                                           '    t = *x;\n'
                                           '    *x = *y;\n'
                                           '    //fun1 函数中可能会存在协程切换\n'
                                           '    fun1();\n'
                                           '    //错误代码\n'
                                           '    *y = t;\n'
                                           '}\n'
                                           '\n'
                                           '\n'
                                           't是一个全局变量或者static静态变量\n'
                                           '在协程A中调用了test1函数，使用了全局变量t\n'
                                           '\n'
                                           '当函数内调用了fun1()，这个函数中如果发生了协程切换，这时假如另外一个协程B也执行了test1函数，那么t的值可能会被修改\n'
                                           '协程B挂起时，重新回到协程A，这时*y = t，会得到一个错误的值\n'
                                           '\n'
                                           '引用栈内存\n'
                                           '这也是一个严重的风险点。协程1将自身栈内存的指针发送给另外一个协程2，协程1退出时会释放协程栈内存。协程2的生命周期长于1，继续读写此内存，就会导致segment '
                                           'fault。\n'
                                           '示例：\n'
                                           'void co1() {\n'
                                           '    char buf[2048];\n'
                                           '    //这里启动一个新的协程，buf 是协程1栈上内存\n'
                                           '    co2(buf);\n'
                                           '    //协程1 退出时会释放栈内存\n'
                                           '}\n'
                                           '\n'
                                           'void co2(char *buf) {\n'
                                           '    for(int i=0; i2048; i++) {\n'
                                           '        Coroutine::sleep(1);\n'
                                           '        //这里 buf 内存可能已经释放了\n'
                                           '        buf[i] = 1;\n'
                                           '    }\n'
                                           '}\n'
                                           '协程安全代码\n'
                                           '为了保证安全性，在Swoole4协程编程中：\n'
                                           '\n'
                                           '不要使用static变量和全局变量，坚持只用局部变量\n'
                                           '若必须访问全局变量，必须保证只用于计算逻辑，不得存在任何IO或Sleep等引起协程切换的操作\n'
                                           '不调用其它任何不可重入的函数\n'
                                           '不要引用栈上内存\n'
                                           '\n',
                                'title': ' 协程 C/C++ 扩展开发指南（1）：内存安全',
                                'uid': '7bef6dac8ee349c88c217ad81ec135c2'},
                    '_type': 'doc',
                    'highlight': {'title': ['协程 C/C++ 扩展开发指南（<b '
                                            "style='color:red;font-size:16px;'>1</b>）：内存安全"]}}],
          'total': 324}}
